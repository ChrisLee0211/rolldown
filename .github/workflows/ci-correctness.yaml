name: CI

env:
  RUST_BACKTRACE: 1
  RUST_TOOLCHAIN: nightly-2023-02-21

on:
  push:
    branches:
      - main
  pull_request:
    types: ['opened', 'reopened', 'synchronize']

jobs:
  node-format:
    name: Node format
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: clippy, rustfmt
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ vars.GITHUB_JOB }}-${{ runner.os }}-${{ env.RUST_TOOLCHAIN }}
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
      - name: 'Install dependencies'
        run: yarn install
      - name: Check
        run: |
          yarn format:check

  cargo-clippy:
    name: Cargo clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # We explicitly do this to cache properly.
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: cargo-clippy-${{ env.RUST_TOOLCHAIN }}
      - name: Cargo clippy
        run: cargo clippy --all --all-targets -- -D warnings

  cargo-fmt:
    name: Cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # We explicitly do this to cache properly.
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: cargo-fmt-${{ env.RUST_TOOLCHAIN }}
      - name: Cargo fmt
        run: cargo fmt --all -- --check

  cargo-test:
    name: Cargo test
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: cargo-test-${{ runner.os }}-${{ env.RUST_TOOLCHAIN }}
      - name: Build
        run: |
          cargo test --all --no-run -- --nocapture
      - name: Test
        run: |
          cargo test --all -- --nocapture

  node-test:
    name: Node test
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: node-test-${{ runner.os }}-${{ env.RUST_TOOLCHAIN }}
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
      - name: 'Install dependencies'
        run: yarn install
      - name: Build
        run: |
          yarn build
      - name: Test
        run: |
          yarn test
